prometheus:
  prometheusSpec:
    podMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    externalUrl: ""
    routePrefix: /

  ingress:
    enabled: true
    ingressClassName: "alb"
    annotations: 
      alb.ingress.kubernetes.io/scheme: internal
      alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
      alb.ingress.kubernetes.io/healthcheck-port: traffic-port
      alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
      alb.ingress.kubernetes.io/success-codes: '200'
      alb.ingress.kubernetes.io/healthy-threshold-count: '2'
      alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-2:523140806637:certificate/f1202f91-8b24-4c19-b361-de22c3ad5739
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
      #alb.ingress.kubernetes.io/ssl-redirect: '443'
      alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
      kubernetes.io/tls-acme: "true"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: monitoring
      alb.ingress.kubernetes.io/group.name: prometheus-dashboard
      alb.ingress.kubernetes.io/group.order: '1'
    labels:
      k8s-app: prometheus-dashboard

    
    hosts:
      - prometheus-dashboard.stage.nextgen.oh.shs.com

    ## Paths to use for ingress rules - one path should match the prometheusSpec.routePrefix
    ##
    paths:
      - /prometheus(/|$)(.*)

    ## For Kubernetes >= 1.18 you should specify the pathType (determines how Ingress paths should be matched)
    ## See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#better-path-matching-with-path-types
    # pathType: ImplementationSpecific

    ## TLS configuration for Prometheus Ingress
    ## Secret must be manually created in the namespace
    ##
    tls: []
    # tls:
    #   - secretName: app-certificate-secret
    #     hosts:
    #       - my.example.com

  ## Settings affecting prometheusSpec
  ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#prometheusspec
  ##

grafana:
  defaultDashboardsTimezone: utc

  ## TODO: Use an existing secret
  ## https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml#L335-L344
  ##
  adminPassword: ayush123
  grafana.ini:
    server:
      domain: localhost
      root_url: "http://localhost/grafana"
      serve_from_sub_path: true
  ingress:
    enabled: false
    ingressClassName: nginx
    labels:
      k8s-app: grafana-dashboard
    hosts:
    - "localhost"
    path: "/grafana"

kubeStateMetrics:
  enabled: false

nodeExporter:
  enabled: false

alertmanager:
  enabled: false